{"Structs/JSONCache/DateFormat.html#/s:9JSONCacheAAV10DateFormatO21iso8601WithSeparatorsA2DmF":{"name":"iso8601WithSeparators","abstract":"<p>Indicates that dates in JSON data are represented as ISO 8601 date","parent_name":"DateFormat"},"Structs/JSONCache/DateFormat.html#/s:9JSONCacheAAV10DateFormatO24iso8601WithoutSeparatorsA2DmF":{"name":"iso8601WithoutSeparators","abstract":"<p>Indicates that dates in JSON data are represented as ISO 8601 date","parent_name":"DateFormat"},"Structs/JSONCache/DateFormat.html#/s:9JSONCacheAAV10DateFormatO21timeIntervalSince1970A2DmF":{"name":"timeIntervalSince1970","abstract":"<p>Indicates that dates in JSON data are represented as double precision","parent_name":"DateFormat"},"Structs/JSONCache/Casing.html#/s:9JSONCacheAAV6CasingO9camelCaseA2DmF":{"name":"camelCase","abstract":"<p>Indicates that JSON data is <code>camelCase</code>d.</p>","parent_name":"Casing"},"Structs/JSONCache/Casing.html#/s:9JSONCacheAAV6CasingO10snake_caseA2DmF":{"name":"snake_case","abstract":"<p>Indicates that JSON data is <code>snake_case</code>d.</p>","parent_name":"Casing"},"Structs/JSONCache/Casing.html":{"name":"Casing","abstract":"<p>Enum defining the JSON casing conventions supported by JSONCache.</p>","parent_name":"JSONCache"},"Structs/JSONCache/DateFormat.html":{"name":"DateFormat","abstract":"<p>Enum defining the JSON date formats supported by JSONCache</p>","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV6casingAB6CasingOvZ":{"name":"casing","abstract":"<p>Defines the casing convention used in consumed and/or produced JSON data.</p>","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV10dateFormatAB04DateC0OvZ":{"name":"dateFormat","abstract":"<p>Defines the date format used in consumed and/or produced JSON data.</p>","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV11mainContextSQySo015NSManagedObjectC0CGvZ":{"name":"mainContext","abstract":"<p>The managed object context associated with the main queue.</p>","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV9bootstrapySS13withModelName_Sb8inMemorySo6BundleC6bundley6ResultAIOyytAA0A5ErrorOGc10completiontFZ":{"name":"bootstrap(withModelName:inMemory:bundle:completion:)","abstract":"<p>Boostrap the Core Data stack. Must be called before invoking any other","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV12stageChangesys10DictionaryVySSypG04withD0_SS17forEntityWithNametFZ":{"name":"stageChanges(withDictionary:forEntityWithName:)","abstract":"<p>Stage a JSON dictionary for loading into Core Data.</p>","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV12stageChangesySays10DictionaryVySSypGG16withDictionaries_SS17forEntityWithNametFZ":{"name":"stageChanges(withDictionaries:forEntityWithName:)","abstract":"<p>Stage an array JSON dictionaries for loading into Core Data.</p>","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV12applyChangesyy6ResultADOyytAA0A5ErrorOGc10completion_tFZ":{"name":"applyChanges(completion:)","abstract":"<p>Load the staged JSON dictionaries into Core Data on a background thread.</p>","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV4save6ResultADOyytAA0A5ErrorOGSo22NSManagedObjectContextC7context_tFZ":{"name":"save(context:)","abstract":"<p>Save any changes in the parent store of the given managed object context.","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV11fetchObject6ResultADOyxSgAA0A5ErrorOGSS6ofType_s11AnyHashableV6withIdSo09NSManagedC7ContextCSg2intSo0lC0CRbzlFZ":{"name":"fetchObject(ofType:withId:in:)","abstract":"<p>Fetch a managed object from the persistent store.</p>","parent_name":"JSONCache"},"Structs/JSONCache.html#/s:9JSONCacheAAV12fetchObjects6ResultADOySayxGAA0A5ErrorOGSS6ofType_Says11AnyHashableVG7withIdsSo22NSManagedObjectContextCSg2intSo0lM0CRbzlFZ":{"name":"fetchObjects(ofType:withIds:in:)","abstract":"<p>Fetch an array of managed objects from the persistent store.</p>","parent_name":"JSONCache"},"Structs/JSONConverter/Conversion.html#/s:9JSONCache13JSONConverterV10ConversionO8fromJSONA2EmF":{"name":"fromJSON","abstract":"<p>Convert from JSON. If <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/JSONCache.html#/s:9JSONCacheAAV6casingAB6CasingOvZ\">JSONCache.casing</a></code> is <code>.snake_case</code>, the conversion","parent_name":"Conversion"},"Structs/JSONConverter/Conversion.html#/s:9JSONCache13JSONConverterV10ConversionO6toJSONA2EmF":{"name":"toJSON","abstract":"<p>Convert to JSON. If <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/JSONCache.html#/s:9JSONCacheAAV6casingAB6CasingOvZ\">JSONCache.casing</a></code> is <code>.snake_case</code>, the conversion is","parent_name":"Conversion"},"Structs/JSONConverter/Conversion.html":{"name":"Conversion","abstract":"<p>Enum definining the supported JSON conversions</p>","parent_name":"JSONConverter"},"Structs/JSONConverter.html#/s:9JSONCache13JSONConverterV7converts10DictionaryVySSypGAC10ConversionO_AG10dictionarySSSg9qualifiertFZ":{"name":"convert(_:dictionary:qualifier:)","abstract":"<p>Perform the specified casing <code>conversion</code> on the keys in <code>dictionary</code>, as","parent_name":"JSONConverter"},"Structs/JSONConverter.html#/s:9JSONCache13JSONConverterV7convertSSAC10ConversionO_SS6stringSSSg9qualifiertFZ":{"name":"convert(_:string:qualifier:)","abstract":"<p>Perform the specified casing <code>conversion</code> on <code>string</code>, as governed by the","parent_name":"JSONConverter"},"Structs/JSONConverter.html":{"name":"JSONConverter","abstract":"<p>A simple casing converter for dictionary keys, converting either from <code>snake_case</code>"},"Structs/JSONCache.html":{"name":"JSONCache","abstract":"<p>JSONCache is a thin layer on top of Core Data that seamlessly consumes, caches"},"Protocols/JSONifiable.html#/s:9JSONCache11JSONifiableP16toJSONDictionarys10DictionaryVySSypGyF":{"name":"toJSONDictionary()","abstract":"<p>Produce a JSON serializable dictionary that represents the type</p>","parent_name":"JSONifiable"},"Protocols/JSONifiable.html#/s:9JSONCache11JSONifiableP12toJSONStringSSyF":{"name":"toJSONString()","abstract":"<p>Serialize the type to a pretty-printed JSON string</p>","parent_name":"JSONifiable"},"Protocols/JSONifiable.html":{"name":"JSONifiable","abstract":"<p>A type that can be represented as JSON</p>"},"Extensions/Date.html#/s:10Foundation4DateV9JSONCacheEACyp13fromJSONValue_tcfc":{"name":"init(fromJSONValue:)","abstract":"<p>Create a <code>Date</code> instance from a JSON value.</p>","parent_name":"Date"},"Extensions/Date.html#/s:10Foundation4DateV9JSONCacheE11toJSONValueypyF":{"name":"toJSONValue()","abstract":"<p>Produce a JSON serializable value from this <code>Date</code> instance. The","parent_name":"Date"},"Extensions/NSEntityDescription.html#/c:@CM@JSONCache@@objc(cs)NSEntityDescription(py)identifierName":{"name":"identifierName","abstract":"<p>The name of the identifier (primary key) attribute of this entity.</p>","parent_name":"NSEntityDescription"},"Extensions/NSAttributeDescription.html#/c:@CM@JSONCache@@objc(cs)NSAttributeDescription(py)isIdentifier":{"name":"isIdentifier","abstract":"<p><code>true</code> if this attribute is the identifier (primary key) of the entity","parent_name":"NSAttributeDescription"},"Extensions/DateFormatter.html#/c:@CM@JSONCache@@objc(cs)NSDateFormatter(cm)dateFromISO8601String:":{"name":"date(fromISO8601String:)","abstract":"<p>Produce a <code>Date</code> instance from an ISO 8601 formatted date string.</p>","parent_name":"DateFormatter"},"Extensions/DateFormatter.html#/c:@CM@JSONCache@@objc(cs)NSDateFormatter(cm)iso8601StringFrom:":{"name":"iso8601String(from:)","abstract":"<p>Produce an ISO 8601 formatted date string from a <code>Date</code> instance. The","parent_name":"DateFormatter"},"Extensions/NSManagedObject.html#/c:@CM@JSONCache@@objc(cs)NSManagedObject(py)identifier":{"name":"identifier","abstract":"<p>The identifier (primary key) value of this object.</p>","parent_name":"NSManagedObject"},"Extensions/NSManagedObject.html#/c:@CM@JSONCache@@objc(cs)NSManagedObject(im)setAttributesFromDictionary:":{"name":"setAttributes(fromDictionary:)","abstract":"<p>Set the attributes of this object from the (key, value) pairs in the","parent_name":"NSManagedObject"},"Extensions/NSManagedObject.html#/c:@CM@JSONCache@@objc(cs)NSManagedObject(im)toJSONDictionary":{"name":"toJSONDictionary()","abstract":"<p>Produce a JSON serializable dictionary that represents this object.</p>","parent_name":"NSManagedObject"},"Extensions/NSManagedObject.html":{"name":"NSManagedObject","abstract":"Undocumented"},"Extensions/DateFormatter.html":{"name":"DateFormatter","abstract":"Undocumented"},"Extensions/NSAttributeDescription.html":{"name":"NSAttributeDescription","abstract":"Undocumented"},"Extensions/NSEntityDescription.html":{"name":"NSEntityDescription","abstract":"Undocumented"},"Extensions/Date.html":{"name":"Date"},"Enums/JSONCacheError.html#/s:9JSONCache0A5ErrorO13modelNotFoundACSScACmF":{"name":"modelNotFound","abstract":"<p>A managed object model with the wrapped file name could not be found.</p>","parent_name":"JSONCacheError"},"Enums/JSONCacheError.html#/s:9JSONCache0A5ErrorO019modelInitializationB0AC10Foundation3URLVcACmF":{"name":"modelInitializationError","abstract":"<p>The managed object model could not be initialized with the wrapped URL.</p>","parent_name":"JSONCacheError"},"Enums/JSONCacheError.html#/s:9JSONCache0A5ErrorO32managedObjectContextNotAvailableA2CmF":{"name":"managedObjectContextNotAvailable","abstract":"<p>The <code>mainContext</code> is <code>nil</code>, either because boostrapping has not completed,","parent_name":"JSONCacheError"},"Enums/JSONCacheError.html#/s:9JSONCache0A5ErrorO12noSuchEntityACSScACmF":{"name":"noSuchEntity","abstract":"<p>There is no entity with the wrapped name.</p>","parent_name":"JSONCacheError"},"Enums/JSONCacheError.html#/s:9JSONCache0A5ErrorO08coreDataB0ACs0B0_pcACmF":{"name":"coreDataError","abstract":"<p>The wrapped error ocurred during a Core Data operation.</p>","parent_name":"JSONCacheError"},"Enums/JSONCacheError.html":{"name":"JSONCacheError","abstract":"<p>Enum describing the set of errors that may be returned by JSONCache methods</p>"},"Enums.html":{"name":"Enums","abstract":"The following enums are available globally."},"Extensions.html":{"name":"Extensions","abstract":"The following extensions are available globally."},"Protocols.html":{"name":"Protocols","abstract":"The following protocols are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."}}